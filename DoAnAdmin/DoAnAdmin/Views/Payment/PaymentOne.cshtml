
@{
    ViewBag.Title = "Payment";
    Layout = "~/Views/Shared/_DetailLayoutPage.cshtml";
}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" />
@using DoAnAdmin.Models
@model Product
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.26.1/axios.min.js" integrity="sha512-bPh3uwgU5qEMipS/VOmRqynnMXGGSRv+72H/N260MQeXZIK4PG48401Bsby9Nq5P5fz7hy5UGNmC/W1Z51h2GQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
@using (@Html.BeginForm()){
    <div class="container">
        <div class="row">
            <aside class="col-lg-6">
                <div class="card">
                    <div class="table-responsive">
                        <table class="table table-borderless table-shopping-cart">
                            <thead class="text-muted">
                                <tr class="small text-uppercase">
                                    <th scope="col">Product</th>
                                    <th scope="col" width="100">Quantity</th>
                                    <th scope="col" width="100">Price</th>
                                    <th scope="col" class="text-right d-none d-md-block" width="100"></th>
                                </tr>
                            </thead>
                            <tbody>

                                <tr>
                                    <td>
                                        <figure class="itemside align-items-center">
                                            <div class="aside"><img src="~/Assets/Image/ImageProduct/@Model.avatar" class="img-sm"></div>
                                            <figcaption class="info">
                                                <a href="#" class="title text-dark" data-abc="true">@Model.Name</a>
                                                <p class="text-muted small">SIZE: L <br> Brand: MAXTRA</p>
                                            </figcaption>
                                        </figure>
                                    </td>
                                    <td>
                                        <input type="number" disabled="disabled" class="form-control form-control-lg text-center" value="1" name="txtsl">
                                    </td>
                                    <td>

                                        <div class="price-wrap"> <var class="price"></var> <small class="text-muted">@Model.price</small> </div>
                                    </td>

                                </tr>

                            </tbody>
                        </table>
                    </div>
                </div>
            </aside>
            <aside class="col-lg-6" style="margin-top:0px">
                @{
                    var sdt = Session["user"] as DoAnAdmin.Models.Customer;
                }
                <div class="card mb-3">
                    <div class="card-body">
                        <form>
                            <div class="form-group">
                                <label>Địa chỉ giao hàng</label>
                                <input type="text" id="txt" class="form-control coupon" name="txt" value="@sdt.cusAddress">
                                <a data-original-title="Save to Wishlist" title="" href="" class="btn btn-light" data-toggle="tooltip" data-abc="true"> <i class="fa fa-heart"></i></a> <a href="@Url.Action("Address", "Customers")" class="btn btn-light btn-round" data-abc="true">Thay đổi</a>
                            </div>
                        </form>

                        <form>
                            <div class="form-group">
                                <label>Họ và tên khách hàng</label>
                                <div class="input-group"> <input type="text" disabled="disabled" class="form-control coupon" name="txt_phone" placeholder="@sdt.cusName "> <span class="input-group-append"></span> </div>
                            </div>
                        </form>
                        <form>
                            <div class="form-group">
                                <label>Số điện thoại giao hàng</label>
                                <div class="input-group"> <input type="text" disabled="disabled" class="form-control coupon" name="txtsdt" placeholder="@sdt.cusPhone "> <span class="input-group-append"></span> </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <dl class="dlist-align">
                            <dt>Total price:</dt>


                        </dl>

                        <dl class="dlist-align">

                            <dt>Giảm giá:</dt>
                            <dd class="text-right text-danger ml-3">- 100000</dd>
                        </dl>
                        <dl class="dlist-align">
                            <dt>Tổng tiền:</dt>
                            <dd class="text-right text-dark b ml-3"><h3 style="color:red">@String.Format("{0:0,0}", @Model.price) VND</h3></dd>
                        </dl>
                        <hr>
                        <button class="btn btn-out btn-success btn-square btn-main mt-2" type="submit">Mua hàng</button>
                    </div>
                </div>
            </aside>
        </div>

    </div>
}
<style>

    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn {
        border-radius: 0px;
    }

    .btn-circle {
        width: 56px;
        height: 56px;
        text-align: center;
        padding: 12px 0;
        font-size: 20px;
        line-height: 1.428571429;
        border-radius: 35px;
        margin-top: -14px;
        border: solid 3px #ccc !important;
        opacity: 1 !important;
        -webkit-box-shadow: inset 0px 0px 0px 3px #fff !important;
        -moz-box-shadow: inset 0px 0px 0px 3px #fff !important;
        -o-box-shadow: inset 0px 0px 0px 3px #fff !important;
        -ms-box-shadow: inset 0px 0px 0px 3px #fff !important;
        box-shadow: inset 0px 0px 0px 3px #fff !important;
        backgournd-color: #428bca;
    }

    .primary
    .container-fluid {
        margin-top: 70px
    }

    .card-body {
        -ms-flex: 1 1 auto;
        flex: 1 1 auto;
        padding: 1.40rem
    }

    .img-sm {
        width: 80px;
        height: 80px
    }

    .itemside .info {
        padding-left: 15px;
        padding-right: 7px
    }

    .table-shopping-cart .price-wrap {
        line-height: 1.2
    }

    .table-shopping-cart .price {
        font-weight: bold;
        margin-right: 5px;
        display: block
    }

    .text-muted {
        color: #969696 !important
    }

    a {
        text-decoration: none !important
    }

    .card {
        position: relative;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid rgba(0, 0, 0, .125);
        border-radius: 0px
    }

    .itemside {
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        width: 100%
    }

    .dlist-align {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex
    }

    [class*="dlist-"] {
        margin-bottom: 5px
    }

    .coupon {
        border-radius: 1px
    }

    .price {
        font-weight: 600;
        color: #212529
    }

    .btn.btn-out {
        outline: 1px solid #fff;
        outline-offset: -5px
    }

    .btn-main {
        border-radius: 2px;
        text-transform: capitalize;
        font-size: 15px;
        padding: 10px 19px;
        cursor: pointer;
        color: #fff;
        width: 100%
    }

    .btn-light {
        color: #ffffff;
        background-color: #F44336;
        border-color: #f8f9fa;
        font-size: 12px
    }

        .btn-light:hover {
            color: #ffffff;
            background-color: #F44336;
            border-color: #F44336
        }

    .btn-apply {
        font-size: 11px
    }
</style>


<script>
    const host = "https://provinces.open-api.vn/api/";
    var callAPI = (api) => {
        return axios.get(api)
            .then((response) => {
                renderData(response.data, "province");
            });
    }
    callAPI('https://provinces.open-api.vn/api/?depth=1');
    var callApiDistrict = (api) => {
        return axios.get(api)
            .then((response) => {
                renderData(response.data.districts, "district");
            });
    }
    var callApiWard = (api) => {
        return axios.get(api)
            .then((response) => {
                renderData(response.data.wards, "ward");
            });
    }

    var renderData = (array, select) => {
        let row = ' <option disable value="">chọn</option>';
        array.forEach(element => {
            row += `<option value="${element.code}">${element.name}</option>`
        });
        document.querySelector("#" + select).innerHTML = row
    }

    $("#province").change(() => {
        callApiDistrict(host + "p/" + $("#province").val() + "?depth=2");
        printResult();
    });
    $("#district").change(() => {
        callApiWard(host + "d/" + $("#district").val() + "?depth=2");
        printResult();
    });
    $("#ward").change(() => {
        printResult();
    })

    var printResult = () => {
        if ($("#district").val() != "" && $("#province").val() != "" &&
            $("#ward").val() != "") {
            let result = $("#province option:selected").text() +
                " | " + $("#district option:selected").text() + " | " +
                $("#ward option:selected").text();

            $("#result").text(result)

            var diachi = result;
            document.getElementById("txt").value = $("#ward option:selected").text() + "," + $("#district option:selected").text() + "," + $("#province option:selected").text();



        }

    }
</script>