
@{
    ViewBag.Title = "Payment";
    Layout = "~/Views/Shared/_DetailLayoutPage.cshtml";
}
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" />
@using DoAnAdmin.Models
@model List<Cart>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.bundle.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js" integrity="sha512-894YE6QWD5I59HgZOGReFYm4dnWc1Qt5NtvYSaNcOP+u1T9qYdvdihz0PPSiiqn/+/3e7Jo4EaG7TubfWGUrMQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.26.1/axios.min.js" integrity="sha512-bPh3uwgU5qEMipS/VOmRqynnMXGGSRv+72H/N260MQeXZIK4PG48401Bsby9Nq5P5fz7hy5UGNmC/W1Z51h2GQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<style>
    .input_address {
        background-color: transparent !important;
        border-radius: 5px !important;
        height: 45px;
    }

    .title_address {
        font-size: 11px;
        color: #908c8c;
    }

    .input_check {
        margin-left: 10px !important;
    }

    .label_check {
        margin: 0 45px;
    }

    .btn_header {
        outline: none;
        box-shadow: 0 0 0 0 rgb(0 123 255 / 0%) !important;
    }

    .an {
        display: none;
    }
</style>
@using (Html.BeginForm("Payment", "Payment"))
{
    <div class="container">
        <div class="row">
            <aside class="col-lg-6" style="border-right:1px solid #ccc">
                <div class="">
                    <div class="table-responsive">
                        <table class="table table-borderless table-shopping-cart">
                            <thead class="text-muted">
                                <tr class="small text-uppercase" style="text-align:center">
                                    <th width="60%">Product</th>
                                    <th width="5%">Số lượng</th>
                                    <th width="35%">Giá bán</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    QL_LaptopEntities mydb = new QL_LaptopEntities();
                                    var pro = mydb.Products.Where(n => n.id == item.proID).FirstOrDefault();
                                    <tr>
                                        <td>
                                            <div class="row">
                                                <div class="col-3 text-left">
                                                    <img style="width:80px; height:50px" src="~/Assets/Image/ImageProduct/@pro.avatar">
                                                </div>
                                                <div class="col-1"></div>
                                                <div class="col-7 text-left">
                                                    @if (pro.Name.Length > 50)
                                                    {
                                                        <a href="#" class="title text-dark" data-abc="true"> @pro.Name.Substring(0, 50).ToString()...</a>
                                                    }
                                                    else
                                                    {
                                                        <a href="#" class="title text-dark" data-abc="true"> @pro.Name</a>
                                                    }

                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            <label style="font-size:20px">@item.CartQuantity</label>
                                            @*<input type="number" disabled="disabled" class="form-control form-control-lg text-center" value="@item.CartQuantity">*@
                                        </td>
                                        <td>
                                            <div class="price-wrap"> <var class="price"></var> <h5 style="color:red">@String.Format("{0:0,0}", @pro.price) VND</h5> </div>
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </aside>
            <aside class="col-lg-6" style="margin-top:0px">
                @{
                    int giamgia = (int)@Model.Sum(n => n.CartMoney) + 100000;
                    var sdt = Model.FirstOrDefault();
                    var sdt1 = Session["user"] as DoAnAdmin.Models.Customer;
                }
                <div class=" mb-3">
                    <div class="">
                        <form>
                            <div class="form-group">
                                <label class="title_address">Địa chỉ giao hàng</label>
                                <div class="d-flex">
                                    <input style="margin-right:10px" type="text" id="txt" disabled="disabled" class="input_address form-control coupon" name="txt" value="@sdt1.cusAddress">
                                    <a href="@Url.Action("Address", "Customers")" class="button-35" data-abc="true">Thay đổi</a>
                                </div>

                            </div>
                        </form>

                        <form>
                            <div class="form-group">
                                <label class="title_address">Họ và tên khách hàng</label>
                                <div class="input-group"> <input type="text" disabled="disabled" class="input_address form-control coupon" name="txt_phone" placeholder="@sdt.Customer.cusName "> <span class="input-group-append"></span> </div>
                            </div>
                        </form>
                        <form>
                            <div class="form-group">
                                <label class="title_address">Số điện thoại giao hàng</label>
                                <div class="input-group"> <input type="text" disabled="disabled" class="input_address form-control coupon" name="txtsdt" placeholder="@sdt.Customer.cusPhone "> <span class="input-group-append"></span> </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div>
                    <label>Hình thức thanh toán</label>
                    @*//////////////////////////*@
                    <div class="form-check">
                        <div class="accordion" id="accordionExample">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingOne">
                                    <button class="accordion-button btn_header" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                                        <input class="form-check-input input_check" onclick="clickMe(0)" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                                        <label class="form-check-label label_check" for="flexRadioDefault1">
                                            <img style="width:25px;height:25px; margin-right:10px" src="https://cdn-icons-png.flaticon.com/512/1019/1019607.png" />Thanh toán khi giao hàng (COD)
                                        </label>
                                    </button>
                                </h2>
                                <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                                    <div class="accordion-body">
                                        <p>Khách hàng sẽ thanh toán trực tiếp với người giao hàng khi nhận được đơn hàng.</p>
                                    </div>
                                </div>
                            </div>
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingTwo">
                                    <button class="accordion-button collapsed btn_header" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                        <input class="form-check-input input_check" onclick="clickMe(1)" type="radio" name="flexRadioDefault" id="flexRadioDefault1">
                                        <label class="form-check-label label_check" for="flexRadioDefault1">
                                            <img style="width:25px;height:25px; margin-right:10px" src="https://hstatic.net/0/0/global/design/seller/image/payment/momo.svg?v=4" />Ví MoMo
                                        </label>
                                    </button>
                                </h2>
                                <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                                    <div class="accordion-body">
                                        <p>Khách hàng sẽ quét mã QR để thanh toán</p>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="">
                    <div class="card-body">
                        <dl class="dlist-align">
                            <dt>Giá gốc:</dt>

                            <dd class="text-right ml-3">@String.Format("{0:0,0}", @giamgia) VND</dd>
                        </dl>

                        <dl class="dlist-align">

                            @*<dt>Giảm giá:</dt>
            <dd class="text-right text-danger ml-3">- 100000 đ</dd>*@
                        </dl>
                        <dl class="dlist-align">

                            <dt>Phí vận chuyển:</dt>
                            <dd class="text-right text-danger ml-3">0 đ</dd>
                        </dl>
                        <dl class="dlist-align">
                            <dt>Tổng tiền:</dt>
                            <dd class="text-right text-dark b ml-3"><h3 style="color: red; margin-top: -9px;">@String.Format("{0:0,0}", @Model.Sum(n => n.CartMoney)) VND</h3></dd>
                        </dl>
                        <hr />
                        <input class="form-control" type="hidden" id="txtTT" name="txtTT" value="" />
                        <button id="btnThanhToanTanNha" onclick="clickCart(0)" class="button-62" type="submit">Mua hàng</button>
                        <script>
                            const txtTT = document.getElementById("txtTT");

                            function clickMe(val) {
                                if (val == 1) {
                                    txtTT.setAttribute("value", "MoMo");
                                } else {
                                    txtTT.setAttribute("value", "Thuong");
                                }
                            }
                        </script>
                        <script>
                            function click() {
                                location.reload();
                            }
                            function clickCart() {

                                Swal.fire({
                                    position: 'center',
                                    icon: 'success',
                                    title: 'Thêm đơn hàng thành công!',
                                    showConfirmButton: false,
                                    timer: 4000
                                })
                            }
                        </script>
                        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
                    </div>
                </div>
            </aside>
        </div>

    </div>

}
<style>
    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn {
        border-radius: 0px;
    }

    .btn-circle {
        width: 56px;
        height: 56px;
        text-align: center;
        padding: 12px 0;
        font-size: 20px;
        line-height: 1.428571429;
        border-radius: 35px;
        margin-top: -14px;
        border: solid 3px #ccc !important;
        opacity: 1 !important;
        -webkit-box-shadow: inset 0px 0px 0px 3px #fff !important;
        -moz-box-shadow: inset 0px 0px 0px 3px #fff !important;
        -o-box-shadow: inset 0px 0px 0px 3px #fff !important;
        -ms-box-shadow: inset 0px 0px 0px 3px #fff !important;
        box-shadow: inset 0px 0px 0px 3px #fff !important;
        backgournd-color: #428bca;
    }

    .primary
    .container-fluid {
        margin-top: 70px
    }

    .card-body {
        -ms-flex: 1 1 auto;
        flex: 1 1 auto;
        padding: 1.40rem
    }

    .img-sm {
        width: 80px;
        height: 80px
    }

    .itemside .info {
        padding-left: 15px;
        padding-right: 7px
    }

    .table-shopping-cart .price-wrap {
        line-height: 1.2
    }

    .table-shopping-cart .price {
        font-weight: bold;
        margin-right: 5px;
        display: block
    }

    .text-muted {
        color: #969696 !important
    }

    a {
        text-decoration: none !important
    }

    .card {
        position: relative;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid rgba(0, 0, 0, .125);
        border-radius: 0px
    }

    .itemside {
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        width: 100%
    }

    .dlist-align {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex
    }

    [class*="dlist-"] {
        margin-bottom: 5px
    }

    .coupon {
        border-radius: 1px
    }

    .price {
        font-weight: 600;
        color: #212529
    }

    .btn.btn-out {
        outline: 1px solid #fff;
        outline-offset: -5px
    }

    .btn-main {
        border-radius: 2px;
        text-transform: capitalize;
        font-size: 15px;
        padding: 10px 19px;
        cursor: pointer;
        color: #fff;
        width: 100%
    }

    .btn-light {
        color: #ffffff;
        background-color: #F44336;
        border-color: #f8f9fa;
        font-size: 12px
    }

        .btn-light:hover {
            color: #ffffff;
            background-color: #F44336;
            border-color: #F44336
        }

    .btn-apply {
        font-size: 11px
    }
</style>


<script>
    const host = "https://provinces.open-api.vn/api/";
    var callAPI = (api) => {
        return axios.get(api)
            .then((response) => {
                renderData(response.data, "province");
            });
    }
    callAPI('https://provinces.open-api.vn/api/?depth=1');
    var callApiDistrict = (api) => {
        return axios.get(api)
            .then((response) => {
                renderData(response.data.districts, "district");
            });
    }
    var callApiWard = (api) => {
        return axios.get(api)
            .then((response) => {
                renderData(response.data.wards, "ward");
            });
    }

    var renderData = (array, select) => {
        let row = ' <option disable value="">chọn</option>';
        array.forEach(element => {
            row += `<option value="${element.code}">${element.name}</option>`
        });
        document.querySelector("#" + select).innerHTML = row
    }

    $("#province").change(() => {
        callApiDistrict(host + "p/" + $("#province").val() + "?depth=2");
        printResult();
    });
    $("#district").change(() => {
        callApiWard(host + "d/" + $("#district").val() + "?depth=2");
        printResult();
    });
    $("#ward").change(() => {
        printResult();
    })

    var printResult = () => {
        if ($("#district").val() != "" && $("#province").val() != "" &&
            $("#ward").val() != "") {
            let result = $("#province option:selected").text() +
                " | " + $("#district option:selected").text() + " | " +
                $("#ward option:selected").text();

            $("#result").text(result)

            var diachi = result;
            document.getElementById("txt").value = $("#ward option:selected").text() + "," + $("#district option:selected").text() + "," + $("#province option:selected").text();



        }

    }
</script>